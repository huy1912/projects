package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-07-06T23:05:00.516+08:00
 * Generated source version: 3.1.11
 * 
 */
@WebServiceClient(name = "LISIntegrationWebservice", 
                  wsdlLocation = "file:/E:/Works/workspace/lab/rims-lab-quantum/src/main/resources/wsdl/LisIntegrationWebservice.wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class LISIntegrationWebservice extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "LISIntegrationWebservice");
    public final static QName LISIntegrationWebserviceSoap12 = new QName("http://tempuri.org/", "LISIntegrationWebserviceSoap12");
    public final static QName LISIntegrationWebserviceSoap = new QName("http://tempuri.org/", "LISIntegrationWebserviceSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:/E:/Works/workspace/lab/rims-lab-quantum/src/main/resources/wsdl/LisIntegrationWebservice.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(LISIntegrationWebservice.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/E:/Works/workspace/lab/rims-lab-quantum/src/main/resources/wsdl/LisIntegrationWebservice.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public LISIntegrationWebservice(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LISIntegrationWebservice(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LISIntegrationWebservice() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public LISIntegrationWebservice(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public LISIntegrationWebservice(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public LISIntegrationWebservice(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns LISIntegrationWebserviceSoap
     */
    @WebEndpoint(name = "LISIntegrationWebserviceSoap12")
    public LISIntegrationWebserviceSoap getLISIntegrationWebserviceSoap12() {
        return super.getPort(LISIntegrationWebserviceSoap12, LISIntegrationWebserviceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LISIntegrationWebserviceSoap
     */
    @WebEndpoint(name = "LISIntegrationWebserviceSoap12")
    public LISIntegrationWebserviceSoap getLISIntegrationWebserviceSoap12(WebServiceFeature... features) {
        return super.getPort(LISIntegrationWebserviceSoap12, LISIntegrationWebserviceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns LISIntegrationWebserviceSoap
     */
    @WebEndpoint(name = "LISIntegrationWebserviceSoap")
    public LISIntegrationWebserviceSoap getLISIntegrationWebserviceSoap() {
        return super.getPort(LISIntegrationWebserviceSoap, LISIntegrationWebserviceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LISIntegrationWebserviceSoap
     */
    @WebEndpoint(name = "LISIntegrationWebserviceSoap")
    public LISIntegrationWebserviceSoap getLISIntegrationWebserviceSoap(WebServiceFeature... features) {
        return super.getPort(LISIntegrationWebserviceSoap, LISIntegrationWebserviceSoap.class, features);
    }

}
